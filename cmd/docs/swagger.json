{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This service manages Identity and Access Management",
        "title": "Athena API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/athena/health": {
            "get": {
                "description": "Check if component is up and running",
                "tags": [
                    "Health"
                ],
                "summary": "Component Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.HealthResponse"
                        }
                    }
                }
            }
        },
        "/athena/v1/oauth/clients": {
            "put": {
                "tags": [
                    "OAuth Client"
                ],
                "summary": "Create an OAuth Client",
                "parameters": [
                    {
                        "description": "Body to create a client",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth.PutOAuthClientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.PutOAuthClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ApiError"
                        }
                    }
                }
            }
        },
        "/athena/v1/policies/{id}": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Get Policy by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Policy",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "oauth.Jwks": {
            "type": "object",
            "properties": {
                "alg": {
                    "description": "Algorithm to be used with the key",
                    "type": "string"
                },
                "key_ops": {
                    "description": "Identifies operation(s) for which the key is intended to be used and should NOT be used with the \"use\" field\n\to  \"sign\" (compute digital signature or MAC)\n\to  \"verify\" (verify digital signature or MAC)\n\to  \"encrypt\" (encrypt content)\n\to  \"decrypt\" (decrypt content and validate decryption, if applicable)\n\to  \"wrapKey\" (encrypt key)\n\to  \"unwrapKey\" (decrypt key and validate decryption, if applicable)\n\to  \"deriveKey\" (derive key)\n\to  \"deriveBits\" (derive bits not to be used as a key)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kid": {
                    "description": "Used to match a specific key",
                    "type": "string"
                },
                "kty": {
                    "description": "Cryptographic Algorithm\ne.g. \"RSA\" or \"EC\"",
                    "type": "string"
                },
                "use": {
                    "description": "Intended use of public key (encrypting or verifying signature) and should NOT be used with the \"key_ops\" field\ne.g. \"sig\" or \"enc\"",
                    "type": "string"
                },
                "x5c": {
                    "description": "Contains chain of 1+ PKIX certificates represented as JSON array of certificate value strings",
                    "type": "string"
                },
                "x5t": {
                    "description": "Base64 Url encoded SHA-1 thumbprint (digest) of the DER encoding of X509 Certificate",
                    "type": "string"
                },
                "x5t#S256": {
                    "description": "Base64 Url encoded SHA-256 thumbprint (digest) of the DER encoding of X509 Certificate",
                    "type": "string"
                },
                "x5u": {
                    "description": "Refers to a resource for an X509 public key certificate or certificate chain",
                    "type": "string"
                }
            }
        },
        "oauth.PutOAuthClientRequest": {
            "type": "object",
            "required": [
                "client_name",
                "grant_types"
            ],
            "properties": {
                "client_name": {
                    "type": "string"
                },
                "client_uri": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grant_types": {
                    "description": "authorization_code (default), implicit, password, client_credentials, refresh_token",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jwks": {
                    "$ref": "#/definitions/oauth.Jwks"
                },
                "jwks_uri": {
                    "type": "string"
                },
                "logo_uri": {
                    "type": "string"
                },
                "policy_uri": {
                    "type": "string"
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "response_type": {
                    "description": "code (default), token",
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "software_id": {
                    "type": "string"
                },
                "software_version": {
                    "type": "string"
                },
                "token_endpoint_auth_method": {
                    "description": "none - public client\nclient_secret_post - uses http post params\nclient_secret_basic - uses http basic",
                    "type": "string"
                },
                "tos_uri": {
                    "type": "string"
                }
            }
        },
        "responses.ApiError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "error_code": {
                    "type": "string"
                }
            }
        },
        "responses.HealthResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "responses.PutOAuthClientResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                }
            }
        }
    }
}