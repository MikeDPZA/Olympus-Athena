// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/athena/health": {
            "get": {
                "description": "Check if component is up and running",
                "tags": [
                    "Health"
                ],
                "summary": "Component Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.HealthResponse"
                        }
                    }
                }
            }
        },
        "/athena/v1/oauth/clients": {
            "post": {
                "tags": [
                    "OAuth Client"
                ],
                "summary": "Create an OAuth Client",
                "parameters": [
                    {
                        "description": "Body to create a client",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth.ClientRegistrationRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/athena/v1/policies/{id}": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Get Policy by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Policy",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "oauth.ClientRegistrationRequest": {
            "type": "object",
            "properties": {
                "client_name": {
                    "type": "string"
                },
                "client_uri": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grant_types": {
                    "description": "authorization_code (default), implicit, password, client_credentials, refresh_token",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jwks": {
                    "type": "string"
                },
                "jwks_uri": {
                    "type": "string"
                },
                "logo_uri": {
                    "type": "string"
                },
                "policy_uri": {
                    "type": "string"
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "response_types": {
                    "description": "code (default), token",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scope": {
                    "type": "string"
                },
                "software_id": {
                    "type": "string"
                },
                "software_version": {
                    "type": "string"
                },
                "token_endpoint_auth_method": {
                    "description": "Values\nnone - public client aka no secret\nclient_secret_post - uses http post params\nclient_secret_basic - uses http basic",
                    "type": "string"
                },
                "tos_uri": {
                    "type": "string"
                }
            }
        },
        "responses.HealthResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "time": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Athena API",
	Description:      "This service manages Identity and Access Management",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
