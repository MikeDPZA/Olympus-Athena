consumes:
- application/json
definitions:
  oauth.Jwks:
    properties:
      alg:
        description: Algorithm to be used with the key
        type: string
      key_ops:
        description: "Identifies operation(s) for which the key is intended to be
          used and should NOT be used with the \"use\" field\n\to  \"sign\" (compute
          digital signature or MAC)\n\to  \"verify\" (verify digital signature or
          MAC)\n\to  \"encrypt\" (encrypt content)\n\to  \"decrypt\" (decrypt content
          and validate decryption, if applicable)\n\to  \"wrapKey\" (encrypt key)\n\to
          \ \"unwrapKey\" (decrypt key and validate decryption, if applicable)\n\to
          \ \"deriveKey\" (derive key)\n\to  \"deriveBits\" (derive bits not to be
          used as a key)"
        items:
          type: string
        type: array
      kid:
        description: Used to match a specific key
        type: string
      kty:
        description: |-
          Cryptographic Algorithm
          e.g. "RSA" or "EC"
        type: string
      use:
        description: |-
          Intended use of public key (encrypting or verifying signature) and should NOT be used with the "key_ops" field
          e.g. "sig" or "enc"
        type: string
      x5c:
        description: Contains chain of 1+ PKIX certificates represented as JSON array
          of certificate value strings
        type: string
      x5t:
        description: Base64 Url encoded SHA-1 thumbprint (digest) of the DER encoding
          of X509 Certificate
        type: string
      x5t#S256:
        description: Base64 Url encoded SHA-256 thumbprint (digest) of the DER encoding
          of X509 Certificate
        type: string
      x5u:
        description: Refers to a resource for an X509 public key certificate or certificate
          chain
        type: string
    type: object
  oauth.PutOAuthClientRequest:
    properties:
      client_name:
        type: string
      client_uri:
        type: string
      contacts:
        items:
          type: string
        type: array
      grant_types:
        description: authorization_code (default), implicit, password, client_credentials,
          refresh_token
        items:
          type: string
        type: array
      jwks:
        $ref: '#/definitions/oauth.Jwks'
      jwks_uri:
        type: string
      logo_uri:
        type: string
      policy_uri:
        type: string
      redirect_uris:
        items:
          type: string
        type: array
      response_type:
        description: code (default), token
        type: string
      scope:
        type: string
      software_id:
        type: string
      software_version:
        type: string
      token_endpoint_auth_method:
        description: |-
          none - public client
          client_secret_post - uses http post params
          client_secret_basic - uses http basic
        type: string
      tos_uri:
        type: string
    required:
    - client_name
    - grant_types
    type: object
  responses.ApiError:
    properties:
      error:
        type: string
      error_code:
        type: string
    type: object
  responses.HealthResponse:
    properties:
      success:
        type: boolean
      time:
        type: string
    type: object
  responses.PutOAuthClientResponse:
    properties:
      client_id:
        type: string
      client_secret:
        type: string
    type: object
info:
  contact: {}
  description: This service manages Identity and Access Management
  title: Athena API
  version: "1.0"
paths:
  /athena/health:
    get:
      description: Check if component is up and running
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.HealthResponse'
      summary: Component Health Check
      tags:
      - Health
  /athena/v1/oauth/clients:
    put:
      parameters:
      - description: Body to create a client
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/oauth.PutOAuthClientRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.PutOAuthClientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ApiError'
      summary: Create an OAuth Client
      tags:
      - OAuth Client
  /athena/v1/policies/{id}:
    get:
      parameters:
      - description: ID of Policy
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Get Policy by ID
      tags:
      - Policies
produces:
- application/json
swagger: "2.0"
